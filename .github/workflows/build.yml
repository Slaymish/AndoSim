name: Build Cross-Platform

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

permissions:
  contents: read

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.11']
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential libeigen3-dev python3-dev
        pip install numpy
        pip install "pybind11[global]"
        
    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install cmake eigen pybind11
        pip install numpy
        
    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        pip install numpy
        pip install "pybind11[global]"
        
    - name: Download Eigen (Windows)
      if: runner.os == 'Windows'
      run: |
        Invoke-WebRequest -Uri "https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.zip" -OutFile "eigen.zip"
        Expand-Archive -Path eigen.zip -DestinationPath C:\
        echo "EIGEN3_INCLUDE_DIR=C:\eigen-3.4.0" >> $env:GITHUB_ENV
        
    - name: Build module (Unix)
      if: runner.os != 'Windows'
      run: |
        mkdir -p build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$(python3 -m pybind11 --cmakedir) ..
        cmake --build . --config Release
        
    - name: Build module (Windows)
      if: runner.os == 'Windows'
      run: |
        if (-Not (Test-Path build)) { New-Item -ItemType Directory -Path build }
        cd build
        $pybind11_dir = python -m pybind11 --cmakedir
        cmake -DCMAKE_BUILD_TYPE=Release -DEigen3_DIR=$env:EIGEN3_INCLUDE_DIR -DCMAKE_PREFIX_PATH="$pybind11_dir" ..
        cmake --build . --config Release
        
    - name: Run tests (Unix)
      if: runner.os != 'Windows'
      run: |
        python3 tests/test_adaptive_timestep.py
        python3 tests/test_heatmap_colors.py
        
    - name: Run tests (Windows)
      if: runner.os == 'Windows'
      run: |
        $env:PYTHONPATH = "build/Release;build"
        python tests/test_adaptive_timestep.py
        python tests/test_heatmap_colors.py
        
    - name: Get module filename
      id: module
      shell: bash
      run: |
        if [ "${{ runner.os }}" = "Linux" ]; then
          MODULE=$(find build -name "ando_barrier_core*.so" | head -1)
          ARTIFACT_NAME="ando_barrier_core-linux-x64.so"
        elif [ "${{ runner.os }}" = "macOS" ]; then
          MODULE=$(find build -name "ando_barrier_core*.so" | head -1)
          ARTIFACT_NAME="ando_barrier_core-macos-universal.so"
        else
          MODULE=$(find build -name "ando_barrier_core*.pyd" | head -1)
          ARTIFACT_NAME="ando_barrier_core-windows-x64.pyd"
        fi
        echo "module_path=$MODULE" >> $GITHUB_OUTPUT
        echo "artifact_name=$ARTIFACT_NAME" >> $GITHUB_OUTPUT
        
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.module.outputs.artifact_name }}
        path: ${{ steps.module.outputs.module_path }}
        
    - name: Package addon
      shell: bash
      run: |
        mkdir -p addon_package/ando_barrier
        cp blender_addon/*.py addon_package/ando_barrier/
        cp blender_addon/blender_manifest.toml addon_package/ando_barrier/
        cp ${{ steps.module.outputs.module_path }} addon_package/ando_barrier/
        cd addon_package
        if [ "${{ runner.os }}" = "Windows" ]; then
          7z a -tzip ../ando_barrier_addon-${{ runner.os }}.zip ando_barrier/
        else
          tar -czf ../ando_barrier_addon-${{ runner.os }}.tar.gz ando_barrier/
        fi
        
    - name: Upload addon package
      uses: actions/upload-artifact@v4
      with:
        name: addon-${{ runner.os }}
        path: |
          *.tar.gz
          *.zip
